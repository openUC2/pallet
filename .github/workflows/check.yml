name: check

on:
  push:
    branches:
      - main
      - edge
      - beta
      - stable
      - updatecli_**
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - auto_merge_enabled  # needed for PRs opened via CI workflows without PATs
  merge_group:
  workflow_dispatch:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        forklift-version:
          - 0.8.0
        platform:
          - runner: ubuntu-24.04-arm
            arch: arm64
          - runner: ubuntu-24.04
            arch: amd64
    runs-on: ${{ matrix.platform.runner }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Setup Forklift
        uses: PlanktoScope/setup-forklift@v1
        with:
          version: ${{ matrix.forklift-version }}

      - name: Cache Forklift pallets
        run: |
          mkdir -p $HOME/.forklift
          forklift dev plt cache-plt
          forklift dev plt cache-dl

      - name: Run Forklift checks
        run: forklift dev plt check

      - name: Make Forklift deployment plan
        run: forklift dev plt plan

      # PRE-CACHE CONTAINER IMAGES
      # Because Docker Hub rate-limits container image pulls and we want to pull the same set of
      # images many times for matrix checks, we pre-cache container images so that they can be
      # reused across workflow runs.
      # TODO: move some of this into a separate GitHub Action and/or Forklift command, to keep
      # this workflow simpler

      - name: Set up container image pre-caching
        id: setup-precaching
        run: |
          mkdir -p /tmp/forklift/container-image-precache
          echo "path=/tmp/forklift/container-image-precache" >> $GITHUB_OUTPUT
          container_list_hash="$(forklift dev plt ls-img | sha256sum | cut -d ' ' -f 1)"
          echo "container_list_hash=$container_list_hash" >> $GITHUB_OUTPUT

      - name: Try to load container image pre-cache from GitHub Actions cache
        id: restore-precache
        uses: actions/cache/restore@v4
        with:
          key: "container-images-${{ matrix.platform.arch }}-${{ steps.setup-precaching.outputs.container_list_hash }}"
          path: ${{ steps.setup-precaching.outputs.path }}

      - name: Pre-download container images
        env:
          ARCH: ${{ matrix.platform.arch }}
          PRECACHE_PATH: ${{ steps.setup-precaching.outputs.path }}
        run: |
          set -x
          if [ -f "$PRECACHE_PATH/images-list" ]; then
            echo "Pre-downloaded container images can be loaded from the GitHub Actions cache!"
            exit 0
          fi
          forklift dev plt ls-img > "$PRECACHE_PATH/images-list"

          echo "Downloading temporary tools to pre-download container images..."
          tmp_bin="$(mktemp -d --tmpdir=/tmp bin.XXXXXXX)"
          ".github/download-crane.sh" "$tmp_bin"
          ".github/download-rush.sh" "$tmp_bin"

          echo "Pre-downloading container images..."
          export PATH="$tmp_bin:$PATH"
          container_platform="linux/$ARCH"
          rush ".github/precache-image.sh" {} "$PRECACHE_PATH" "$container_platform" \
            < "$PRECACHE_PATH/images-list"

      - name: Save container image pre-cache to GitHub Actions cache
        if: "!steps.restore-precache.outputs.cache-hit"
        uses: actions/cache/save@v4
        with:
          key: "container-images-${{ matrix.platform.arch }}-${{ steps.setup-precaching.outputs.container_list_hash }}"
          path: ${{ steps.setup-precaching.outputs.path }}

      - name: Load cached container images into Docker
        env:
          PRECACHE_PATH: ${{ steps.setup-precaching.outputs.path }}
        run: |
          tmp_bin="$(mktemp -d --tmpdir=/tmp bin.XXXXXXX)"
          ".github/download-rush.sh" "$tmp_bin"
          export PATH="$tmp_bin:$PATH"
          forklift dev plt ls-img | rush ".github/load-precached-image.sh" {} "$PRECACHE_PATH"

      - name: Try to stage the pallet
        run: forklift dev plt stage
